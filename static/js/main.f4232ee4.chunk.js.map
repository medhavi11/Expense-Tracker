{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","selected","onChange","event","onPickedYear","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","Expenses","useState","setSelectedYear","filteredExpenses","filter","toString","ExpenseForm","enteredtitle","setEnteredTitle","enteredamount","setEnteredAmount","entereddate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","htmlFor","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpanseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4232ee4.chunk.js","sourcesContent":["import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = 'card ' + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\nexport default Card;\n","import React from \"react\";\nimport \"./ChartBar.css\";\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\nexport default ExpensesChart;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  // const [year, setSelectedYear] = useState(\"\");\n  const yearSelectHandler = (event) => {\n    // setSelectedYear(event.target.value);\n    props.onPickedYear(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={yearSelectHandler}>\n          <option value=\"2024\">2024</option>\n          <option value=\"2023\">2023</option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nfunction ExpenseItem(props) {\n  return (\n    // <li style={{ listStyleType: \"none\" }}>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">â‚¹ {props.amount}</div>\n        </div>\n        {/* <button onClick={clickHandler}>Change title</button> */}\n      </Card>\n    // </li>\n  );\n}\n\nexport default ExpenseItem;\n","import ExpenseItems from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\nconst ExpensesList = (props) => {\n  let expensesContent = <p>No expenses found.</p>;\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n  return (\n    <ul className=\"expense-list\">\n      {props.items.map((expense) => (\n        <ExpenseItems\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default ExpensesList;\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nfunction Expenses(props) {\n  const [year, setSelectedYear] = useState(\"2021\");\n  const pickedyear = (year) => {\n    setSelectedYear(year);\n  };\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === year;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={year} onPickedYear={pickedyear} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nconst ExpenseForm = (props) => {\n  const [enteredtitle, setEnteredTitle] = useState(\"\");\n  const [enteredamount, setEnteredAmount] = useState(\"\");\n  const [entereddate, setEnteredDate] = useState(\"\");\n\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n  const titleChangeHandler = (event) => {\n    // 2- setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    setEnteredTitle(event.target.value);\n    //3- setUserInput((prevState)=>{\n    //      return{...prevState,enteredTitle:event.target.value};\n    // });\n  };\n  const amountChangeHandler = (event) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredtitle,\n      amount: +enteredamount,\n      date: new Date(entereddate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredDate(\"\");\n    setEnteredAmount(\"\");\n    // console.log(expenseData);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Title</label>\n          <input\n            type=\"text\"\n            value={enteredtitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredamount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Date</label>\n          <input\n            type=\"date\"\n            min=\"2021-06-04\"\n            max=\"2030-06-04\"\n            value={entereddate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = (enteredExpanseData) => {\n    const expenseData = {\n      ...enteredExpanseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst DUMMY_EXPENSES = [\n  // {\n  //   id: \"e1\",\n  //   title: \"Toilet Paper\",\n  //   amount: 94.12,\n  //   date: new Date(2020, 7, 14),\n  // },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  // {\n  //   id: \"e3\",\n  //   title: \"Car Insurance\",\n  //   amount: 294.67,\n  //   date: new Date(2021, 2, 28),\n  // },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}